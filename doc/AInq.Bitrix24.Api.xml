<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AInq.Bitrix24.Api</name>
    </assembly>
    <members>
        <member name="T:AInq.Bitrix24.Crm">
            <summary> Bitrix24 CRM Api calls </summary>
        </member>
        <member name="M:AInq.Bitrix24.Crm.#ctor(AInq.Bitrix24.IBitrix24Client)">
            <param name="client"> API Client </param>
        </member>
        <member name="P:AInq.Bitrix24.Crm.Lead">
            <summary> CRM Lead calls </summary>
        </member>
        <member name="P:AInq.Bitrix24.Crm.Contact">
            <summary> CRM Contact calls </summary>
        </member>
        <member name="P:AInq.Bitrix24.Crm.Company">
            <summary> CRM Company calls </summary>
        </member>
        <member name="P:AInq.Bitrix24.Crm.Deal">
            <summary> CRM Deal calls </summary>
        </member>
        <member name="M:AInq.Bitrix24.Crm.ResetCache">
            <summary> Remove cached data </summary>
        </member>
        <member name="T:AInq.Bitrix24.CrmEntity">
            <summary> CRM entity base class </summary>
        </member>
        <member name="F:AInq.Bitrix24.CrmEntity.Client">
            <summary> CRM client </summary>
        </member>
        <member name="F:AInq.Bitrix24.CrmEntity.Type">
            <summary> Entity type </summary>
        </member>
        <member name="F:AInq.Bitrix24.CrmEntity.Fields">
            <summary> Entity fields info </summary>
        </member>
        <member name="M:AInq.Bitrix24.CrmEntity.FieldsAsync(System.Threading.CancellationToken)">
            <summary> Get entity fields info </summary>
            <param name="cancellation"> Cancellation token </param>
        </member>
        <member name="M:AInq.Bitrix24.CrmEntity.GetAsync(System.Int32,System.Threading.CancellationToken)">
            <summary> Get entity by Id </summary>
            <param name="id"> Id </param>
            <param name="cancellation"> Cancellation token </param>
        </member>
        <member name="M:AInq.Bitrix24.CrmEntity.GetAsync(System.Collections.Generic.IEnumerable{System.Int32},System.Threading.CancellationToken)">
            <summary> Get entities by Id </summary>
            <param name="ids"> Id collection </param>
            <param name="cancellation"> Cancellation token </param>
        </member>
        <member name="M:AInq.Bitrix24.CrmEntity.UpdateAsync(System.Int32,Newtonsoft.Json.Linq.JToken,System.Boolean,System.Threading.CancellationToken)">
            <summary> Update entity </summary>
            <param name="id"> Entity Id </param>
            <param name="fields"> Fields data </param>
            <param name="registerSonetEvent"> Register update event </param>
            <param name="cancellation"> Cancellation token </param>
        </member>
        <member name="M:AInq.Bitrix24.CrmEntity.DeleteAsync(System.Int32,System.Threading.CancellationToken)">
            <summary> Delete entity </summary>
            <param name="id"> Entity Id </param>
            <param name="cancellation"> Cancellation token </param>
        </member>
        <member name="M:AInq.Bitrix24.CrmEntity.AddAsync(Newtonsoft.Json.Linq.JObject,System.Boolean,System.Threading.CancellationToken)">
            <summary> Add new entity </summary>
            <param name="fields"> Fields data </param>
            <param name="registerSonetEvent"> Register update event </param>
            <param name="cancellation"> Cancellation token </param>
            <returns> New entity Id </returns>
        </member>
        <member name="M:AInq.Bitrix24.CrmEntity.ListAsync(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary> List entities </summary>
            <param name="filter"> Filter </param>
            <param name="select"> Requested fields </param>
            <param name="cancellation"> Cancellation token </param>
        </member>
        <member name="T:AInq.Bitrix24.JsonHelper">
            <summary> JSON data reading methods to handle some strange Bitrix24 behaviour </summary>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetFloat(Newtonsoft.Json.Linq.JToken)">
            <summary> Try get <see cref="T:System.Single" /> value </summary>
            <param name="token"> JSON source </param>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetFloat(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary> Try get <see cref="T:System.Single" /> value </summary>
            <param name="token"> JSON source </param>
            <param name="paramName"> Property name </param>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetInt(Newtonsoft.Json.Linq.JToken)">
            <summary> Try get <see cref="T:System.Int32" /> value </summary>
            <param name="token"> JSON source </param>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetInt(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary> Try get <see cref="T:System.Int32" /> value </summary>
            <param name="token"> JSON source </param>
            <param name="paramName"> Property name </param>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetIntArray(Newtonsoft.Json.Linq.JToken,System.Boolean)">
            <summary> Try get <see cref="T:System.Int32" /> values array </summary>
            <param name="token"> JSON source </param>
            <param name="ignoreTypeMismatch"> Skip values that can't be parsed, otherwise return empty array </param>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetIntArray(Newtonsoft.Json.Linq.JToken,System.String,System.Boolean)">
            <summary> Try get <see cref="T:System.Int32" /> values array </summary>
            <param name="token"> JSON source </param>
            <param name="paramName"> Property name </param>
            <param name="ignoreTypeMismatch"> Skip values that can't be parsed, otherwise return empty array </param>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetBool(Newtonsoft.Json.Linq.JToken)">
            <summary> Try get <see cref="T:System.Boolean" /> value </summary>
            <param name="token"> JSON source </param>
        </member>
        <member name="M:AInq.Bitrix24.JsonHelper.TryGetBool(Newtonsoft.Json.Linq.JToken,System.String)">
            <summary> Try get <see cref="T:System.Boolean" /> value </summary>
            <param name="token"> JSON source </param>
            <param name="paramName"> Property name </param>
        </member>
    </members>
</doc>
